from numpy import array, dot

# идеальный шестигранный кубик
# 
# M = 1/6 * (1 + 2 + 3 + 4 + 5 + 6) = 3.5
# 
# D = (1 - 3.5)**2 * 1/6 + (2 - 3.5)**2 * 1/6 + ... + (6 - 3.5)**2 * 1/6

X = array([1, 2, 3, 4, 5, 6])
P1 = array([1/6, 1/6, 1/6, 1/6, 1/6, 1/6])

M_X_1 = 0
for x, p in zip(X, P1):
    M_X_1 += x*p

M_X_2 = sum(x*p for x, p in zip(X, P1))

M_X_3 = dot(X, P1)

D_X_1 = 0
for x, p in zip(X, P1):
    D_X_1 += (x - M_X_1)**2 * p

D_X_2 = sum((x - M_X_2)**2 * p for x, p in zip(X, P1))

D_X_3 = sum((X - M_X_3)**2 * P1)


# шестигранный кубик с повышенной вероятностью выпадения "6"
# 
# M = 1*0.08 + 2*0.08 + 3*0.08 + 4*0.08 + 5*0.08 + 6*0.6 = 4.8
# 
# D = (1 - 4.8)**2 * 0.08 + (2 - 4.8)**2 * 0.08 + ... + (6 - 4.8)**2 * 0.6

Y = array([1, 2, 3, 4, 5, 6])
P2 = array([0.08, 0.08, 0.08, 0.08, 0.08, 0.6])

M_Y = dot(Y, P2)
D_Y = sum((Y - M_Y)**2 * P2)
std_Y = D_Y**0.5

